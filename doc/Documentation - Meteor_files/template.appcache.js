(function(){Template.__define__("pkg_appcache",Package.handlebars.Handlebars.json_ast_to_func([["#",[[0,"better_markdown"]],["\n\n## `appcache`\n\nThe `appcache` package stores the static parts of a Meteor application\n(the client side Javascript, HTML, CSS, and images) in the browser's\n[application cache](https://en.wikipedia.org/wiki/AppCache). To enable\ncaching simply add the `appcache` package to your project.\n\n* Once a user has visited a Meteor application for the first time and\n  the application has been cached, on subsequent visits the web page\n  loads faster because the browser can load the application out of the\n  cache without contacting the server first.\n\n* Hot code pushes are loaded by the browser in the background while the\n  app continues to run.  Once the new code has been fully loaded the\n  browser is able to switch over to the new code quickly.\n\n* The application cache allows the application to be loaded even when\n  the browser doesn't have an Internet connection, and so enables using\n  the app offline.\n\n(Note however that the `appcache` package by itself doesn't make\n*data* available offline: in an application loaded offline, a Meteor\nCollection will appear to be empty in the client until the Internet\nbecomes available and the browser is able to establish a livedata\nconnection).\n\nThe application cache works transparently in all supported browsers\nexcept for Firefox, which pops up a message saying \"This website is\nasking to store data on your computer for offline use\" and asks the\nuser whether to allow or deny the request.  The application cache is\ndisabled on Firefox by default; to turn it on use:\n\n    Meteor.AppCache.config({firefox: true});\n\nYou can also disable the application cache for specific browsers:\n\n    Meteor.AppCache.config({\n      chrome: false,\n      firefox: true,\n      ie: false\n    });\n\nThe supported browsers that can be enabled or disabled are `android`,\n`chrome`, `chromium`, `firefox`, `ie`, `mobileSafari` and `safari`.\n\nBrowsers limit the amount of data they will put in the application\ncache, which can vary due to factors such as how much disk space is\nfree.  Unfortunately if your application goes over the limit rather\nthan disabling the application cache altogether and running the\napplication online, the browser will instead fail that particular\n*update* of the cache, leaving your users running old code.\n\nThus it's best to keep the size of the cache below 5MB.  The\n`appcache` package will print a warning on the Meteor server console\nif the total size of the resources being cached is over 5MB.\n\nIf you have files too large to fit in the cache you can disable\ncaching by URL prefix.  For example,\n\n    Meteor.AppCache.config({onlineOnly: ['/online/']});\n\ncauses files in your `public/online` directory to not be cached, and\nso they will only be available online.  You can then move your large\nfiles into that directory and refer to them at the new URL:\n\n    <img src=\"/online/bigimage.jpg\">\n\nIf you'd prefer not to move your files, you can use the file names\nthemselves as the URL prefix:\n\n    Meteor.AppCache.config({\n      onlineOnly: [\n        '/bigimage.jpg',\n        '/largedata.json'\n      ]\n    });\n\nthough keep in mind that since the exclusion is by prefix (this is a\nlimitation of the application cache manifest), excluding\n`/largedata.json` will also exclude such URLs as\n`/largedata.json.orig` and `/largedata.json/file1`.\n\nFor more information about how Meteor interacts with the application\ncache, see the\n[AppCache page](https://github.com/meteor/meteor/wiki/AppCache)\nin the Meteor wiki.\n\n"]]]));

})();
